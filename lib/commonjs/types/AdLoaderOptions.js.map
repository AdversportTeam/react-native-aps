{"version":3,"sources":["AdLoaderOptions.ts"],"names":["sizeRegex","validateAdLoaderOptions","adLoaderOptions","Error","slotUUID","type","AdType","BANNER","size","test"],"mappings":";;;;;;;AAOA;;AAPA;AACA;AACA;AACA;AACA;AACA;AA0BA,MAAMA,SAAS,GAAG,mBAAlB;AAEA;AACA;AACA;;AACO,SAASC,uBAAT,CAAiCC,eAAjC,EAAmE;AACxE,MAAI,OAAOA,eAAP,KAA2B,QAA/B,EAAyC;AACvC,UAAM,IAAIC,KAAJ,CAAU,4CAAV,CAAN;AACD;;AACD,MAAI,OAAOD,eAAe,CAACE,QAAvB,KAAoC,QAAxC,EAAkD;AAChD,UAAM,IAAID,KAAJ,CAAU,oDAAV,CAAN;AACD;;AACD,MAAI,CAAC,sBAASD,eAAe,CAACG,IAAzB,CAAL,EAAqC;AACnC,UAAM,IAAIF,KAAJ,CAAU,sDAAV,CAAN;AACD;;AACD,MACED,eAAe,CAACG,IAAhB,KAAyBC,eAAOC,MAAhC,KACC,CAACL,eAAe,CAACM,IAAjB,IAAyB,CAACR,SAAS,CAACS,IAAV,CAAeP,eAAe,CAACM,IAA/B,CAD3B,CADF,EAGE;AACA,UAAM,IAAIL,KAAJ,CAAU,sDAAV,CAAN;AACD;AACF","sourcesContent":["/*\n * Copyright (c) 2022-present Adversport & Contributors\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { AdType, isAdType } from './AdType';\n\n/**\n * @public\n */\nexport interface AdLoaderOptions {\n  /**\n   * The slotUUID of the ad slot.\n   */\n  slotUUID: string;\n  /**\n   * The ad type of the ad slot. One of `AdType.BANNER`, `AdType.INTERSTITIAL`.\n   */\n  type: AdType;\n  /**\n   * The size of the banner ad slot. Required for banner ad slots.\n   */\n  size?: string;\n  /**\n   * The optional custom targeting key value pairs for the bid request.\n   */\n  customTargeting?: { [key: string]: string };\n}\n\nconst sizeRegex = /([0-9]+)x([0-9]+)/;\n\n/**\n * @internal\n */\nexport function validateAdLoaderOptions(adLoaderOptions: AdLoaderOptions) {\n  if (typeof adLoaderOptions !== 'object') {\n    throw new Error(\"'adLoaderOptions' expected an object value\");\n  }\n  if (typeof adLoaderOptions.slotUUID !== 'string') {\n    throw new Error(\"'adLoaderOptions.slotUUID' expected a string value\");\n  }\n  if (!isAdType(adLoaderOptions.type)) {\n    throw new Error(\"'adLoaderOptions.type' expected one of AdType values\");\n  }\n  if (\n    adLoaderOptions.type === AdType.BANNER &&\n    (!adLoaderOptions.size || !sizeRegex.test(adLoaderOptions.size))\n  ) {\n    throw new Error(\"'adLoaderOptions.size' expected a valid size string.\");\n  }\n}\n"]}